-- Library Management System

--selecting the database
use library_management

--1. CRUD Operations


/* Task 1. Create a New Book Record
"978-1-60129-456-2', 'To Kill a Mockingbird', 'Classic', 6.00, 'yes', 'Harper Lee', 'J.B. Lippincott & Co.')" */
insert into books
values('978-1-60129-456-2', 'To Kill a Mockingbird', 'Classic', 6.00, 'yes', 'Harper Lee', 'J.B. Lippincott & Co.')

-- Task 2: Update an Existing Member's Address
update members
set member_address='101 Main St'
where member_id='C101'

/* Task 3: Delete a Record from the Issued Status Table
Objective: Delete the record with issued_id = 'IS106' from the issued_status table.*/

delete from issued_status
where issued_id='IS106'

/* Task 4: Retrieve All Books Issued by a Specific Employee
Objective: Select all books issued by the employee with emp_id = 'E101'.*/

select issued_book_isbn,
		issued_book_name 
from issued_status
where issued_emp_id='E101'

/* Task 5: List Members Who Have Issued More Than One Book
Objective: Use GROUP BY to find members who have issued more than one book. */

select i.issued_member_id,
		m.member_name
from issued_status i
inner join members m
on i.issued_member_id=m.member_id
group by issued_member_id,member_name
having count(issued_id)>1

-- ____________________________________________________________________

--2. CTAS (Create Table As Select)

/* Task 6: Create Summary Tables**: Used CTAS to generate new tables based on query results -
each book and total book_issued_cnt */

select issued_book_isbn,
		issued_book_name as 'Title',
		count(*) as 'Count'
into Issued_Book_Summary
from issued_status
group by issued_book_isbn,issued_book_name
order by 3 desc;

--_______________________________________________________________________________________________________________________________

-- 3. Data Analysis & Findings

/* Task 7. How to Retrieve All Books in any Specific Category */
select * from books
where category='Children'

/* Task 8: Find Total Rental Income generated by Category. */

select category,
		sum(rental_price),
		count(isbn) as 'Book_Rented_Count'
from books b
inner join issued_status i
on b.isbn=i.issued_book_isbn
group by category
order by 3 desc

/* Task 9. **List Members Who Registered in the Last 180 Days** */

select member_id,
		member_name,datediff(d,reg_date,getdate())
from members
where datediff(d,reg_date,getdate())<=180

/* Task 10: List Employees with Their Branch Manager's Name and their branch details** */

select e.emp_id,e.emp_name,b.branch_id,manager_id,
		e1.emp_name as 'manager'
from employees e
inner join branch b
on e.branch_id=b.branch_id
inner join employees e1
on b.manager_id=e1.emp_id

/* Task 11. Create a Table of Books with Rental Price Above a Certain Threshold 7USD */

--create table Books_price_greater_than_7USD as

select * 
into Books_price_greater_than_7USD
from books
where rental_price > 7

select * from Books_price_greater_than_7USD

/* Task 12: Retrieve the List of Books Not Yet Returned */

select issued_id,
		issued_book_name,
		issued_book_isbn
from issued_status
where issued_id not in (select issued_id from return_status)

--___________________________________________________________________________________________________________________________